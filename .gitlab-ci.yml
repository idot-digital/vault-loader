image: golang:1.21-alpine

variables:
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0

stages:
  - build
  - release

.build_template: &build_template
  stage: build
  script:
    - apk add --no-cache git
    - go build -ldflags="-w -s" -o vault-loader-$GOOS-$GOARCH
    - tar czf vault-loader-$GOOS-$GOARCH.tar.gz vault-loader-$GOOS-$GOARCH
  artifacts:
    paths:
      - vault-loader-$GOOS-$GOARCH.tar.gz
    expire_in: 1 week

build_linux_amd64:
  <<: *build_template
  variables:
    GOOS: linux
    GOARCH: amd64

build_linux_arm64:
  <<: *build_template
  variables:
    GOOS: linux
    GOARCH: arm64

build_darwin_amd64:
  <<: *build_template
  variables:
    GOOS: darwin
    GOARCH: amd64

build_darwin_arm64:
  <<: *build_template
  variables:
    GOOS: darwin
    GOARCH: arm64

build_windows_amd64:
  <<: *build_template
  variables:
    GOOS: windows
    GOARCH: amd64

build_windows_arm64:
  <<: *build_template
  variables:
    GOOS: windows
    GOARCH: arm64

pages:
  stage: release
  dependencies:
    - build_linux_amd64
    - build_linux_arm64
    - build_darwin_amd64
    - build_darwin_arm64
    - build_windows_amd64
    - build_windows_arm64
  script:
    - mkdir -p public
    - cp install.sh public/
    - cp vault-loader-*.tar.gz public/
  artifacts:
    paths:
      - public
    expire_in: never
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
