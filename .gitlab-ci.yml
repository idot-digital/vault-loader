image: golang:1.21-alpine

variables:
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0

stages:
  - build
  - release

.build_template: &build_template
  stage: build
  script:
    - apk add --no-cache git
    - |
      if [[ $CI_COMMIT_TAG ]]; then
        go build -ldflags="-w -s -X 'main.Version=$CI_COMMIT_TAG'" -o vault-loader-$GOOS-$GOARCH$FILE_EXT
      else
        go build -ldflags="-w -s" -o vault-loader-$GOOS-$GOARCH$FILE_EXT
      fi
    - tar czf vault-loader-$GOOS-$GOARCH.tar.gz vault-loader-$GOOS-$GOARCH$FILE_EXT
  only:
    - master
    - tags
  artifacts:
    paths:
      - vault-loader-$GOOS-$GOARCH.tar.gz
    expire_in: 1 week

build_linux_amd64:
  <<: *build_template
  variables:
    GOOS: linux
    GOARCH: amd64

build_linux_arm64:
  <<: *build_template
  variables:
    GOOS: linux
    GOARCH: arm64

build_darwin_amd64:
  <<: *build_template
  variables:
    GOOS: darwin
    GOARCH: amd64

build_darwin_arm64:
  <<: *build_template
  variables:
    GOOS: darwin
    GOARCH: arm64

build_windows_amd64:
  <<: *build_template
  variables:
    GOOS: windows
    GOARCH: amd64
    FILE_EXT: .exe

build_windows_arm64:
  <<: *build_template
  variables:
    GOOS: windows
    GOARCH: arm64
    FILE_EXT: .exe

sign_and_notarize:
  stage: build
  tags:
    - macos
  before_script:
    - tar xzf vault-loader-darwin-amd64.tar.gz
    - tar xzf vault-loader-darwin-arm64.tar.gz
  script:
    - lipo -create -output vault-loader-darwin-universal vault-loader-darwin-amd64 vault-loader-darwin-arm64
    - 'codesign -v -f --timestamp --options=runtime --sign "Developer ID Application: Luis Kugel (FG5343Y9KB)" "vault-loader-darwin-universal"'
    - mkdir pkg_payload
    - cp vault-loader-darwin-universal pkg_payload/
    - 'pkgbuild --root "pkg_payload" --identifier "de.luiskugel.vault-loader.pkg" --version "$CI_COMMIT_TAG"  --install-location "/usr/lical/bin" --sign "Developer ID Installer: Luis Kugel (FG5343Y9KB)" "vault-loader-darwin-universal.pkg"'
    - xcrun notarytool submit "vault-loader-darwin-universal.pkg" --apple-id "${APPLEID}" --team-id "${APPLETEAMID}" --password "${APPLEIDPASS}" --wait
    - xcrun stapler staple "vault-loader-darwin-universal.pkg"
    - rm -rf pkg_payload
    - rm vault-loader-darwin-amd64 vault-loader-darwin-arm64 vault-loader-darwin-amd64.tar.gz vault-loader-darwin-arm64.tar.gz
  needs:
    - build_darwin_amd64
    - build_darwin_arm64
  artifacts:
    paths:
      - vault-loader-darwin-universal.pkg
    expire_in: 1 week
  only:
    - tags

pages:
  stage: release
  dependencies:
    - build_linux_amd64
    - build_linux_arm64
    - build_darwin_amd64
    - build_darwin_arm64
    - build_windows_amd64
    - build_windows_arm64
    - sign_and_notarize
  script:
    - mkdir -p public
    - cp install.sh public/
    - cp vault-loader-*.tar.gz public/
    - cp vault-loader-darwin-universal.pkg public/
  artifacts:
    paths:
      - public
    expire_in: never
  only:
    - tags

dockerize:
  stage: release
  image: idotdigital/builder
  before_script:
    - echo $DOCKER_TOKEN | docker login -u luiskugel --password-stdin
    - docker buildx create --name mybuilder --use
    - tar xzf vault-loader-linux-amd64.tar.gz
    - tar xzf vault-loader-linux-arm64.tar.gz
  needs:
    - build_linux_amd64
    - build_linux_arm64
  script:
    - docker buildx build --platform linux/amd64,linux/arm64
      --tag idotdigital/vault-loader:latest
      --tag idotdigital/vault-loader:$CI_COMMIT_TAG
      --no-cache
      --pull
      --push .
  only:
    - tags
  tags:
    - amd64
